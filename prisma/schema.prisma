datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Role {
  idrole        Int      @id 
  Tennguoidung  String?  @db.VarChar(255)
  // Khachhang     Khachhang[]
  // Nhanvien      Nhanvien[]
  // Admin         Admin[]
  RolePermission RolePermission[]
  Users         Users[]
}
model Users {
  idUsers     Int       @id @default(autoincrement())
  Tentaikhoan String?   @db.VarChar(225)
  Matkhau     String?   @db.VarChar(225)
  Hoten       String?   @db.VarChar(225)
  Sdt         String?   @db.VarChar(15) @unique
  Diachi      String?   @db.VarChar(45)
  Email       String?   @db.VarChar(45) @unique
  idRole      Int?      
  Ngaydangky  DateTime? @db.Date
  Token        String?  // Trường lưu token
   ResetToken      String?   // Added for password reset
  ResetCode       String?   // Added for password reset
  ResetTokenExpiry DateTime? // Added for password reset
  role         Role?     @relation(fields: [idRole], references: [idrole])
  danhgia      Danhgia[]
  yeuthich     Yeuthich[]        // Quan hệ 1-n với bảng Image
  donhang       Donhang[]
  lichgiaohang    LichGiaoHang[]   // Quan hệ 1-n với bảng Image
  giohang          Giohang[]
  notifications Notification[] // Add this line
 tuvanhotro     Tuvanhotro[]
  calamviec      CaLamViec[]
  luong          Luong[]
    lichlamviec   LichLamViec[]
    UserBehavior  UserBehavior[]
  diachi         DiaChi[]

  avatar        String?  // Thêm trường avatar để lưu URL của ảnh

}
model Notification {
  idNotification Int      @id @default(autoincrement())
  idUsers        Int?     // ID của người nhận thông báo
  title          String   @db.VarChar(255)
  message        String   @db.Text
  isRead         Boolean  @default(false)
  type           String   @db.VarChar(50)  // 'payment', 'order', etc.
  createdAt      DateTime @default(now())
  idDonhang      Int?     // Optional reference to order
  idThanhtoan    Int?     // Optional reference to payment

  // Relations
  users          Users?   @relation(fields: [idUsers], references: [idUsers])
  donhang        Donhang? @relation(fields: [idDonhang], references: [iddonhang])
  thanhtoan      Thanhtoan? @relation(fields: [idThanhtoan], references: [idthanhtoan])

  @@index([idUsers])
  @@index([createdAt])
  @@index([isRead])
}
model Danhgia {
  iddanhgia    Int       @id @default(autoincrement())
  idsanpham    Int?      
  idUsers      Int?      
  sao          Int?
  noidung      String?   @db.VarChar(45)
  ngaydanhgia  DateTime? @db.Date 
  sanpham      Sanpham?  @relation(fields: [idsanpham], references: [idsanpham])
  // khachhang    Khachhang? @relation(fields: [idkhachang], references: [idkhachhang])
  users    Users? @relation(fields: [idUsers], references: [idUsers])
}

// model Khachhang {
//   idkhachhang     Int       @id @default(autoincrement())  @unique
//   hoten           String?   @db.VarChar(255)
//   sodienthoai     String?   @db.VarChar(45)
//   email           String?   @db.VarChar(255)  @unique
//   gioitinh        Boolean?  @db.TinyInt
//   diachi          String?   @db.VarChar(45)
//   ngaysinh        DateTime?
//   tendangnhap     String?   @db.VarChar(45)
//   matkhau         String?   @db.VarChar(45)
//   idrolekhachhang Int? @unique
//   role            Role?     @relation(fields: [idrolekhachhang], references: [idrole])
//   // giohang         Giohang[]
//   // danhgia         Danhgia[]
//   Admin           Admin[]
//   tuvanhotro      Tuvanhotro[]
// }

model Donhang {
  iddonhang      Int       @id @default(autoincrement())
  tongsoluong    Int?
  trangthai      String?   @db.VarChar(45)
  tongsotien     Int?
  ngaydat        DateTime?   @db.Date
  idUsers        Int?      // Khóa ngoại tham chiếu đến bảng Users
  users          Users?    @relation(fields: [idUsers], references: [idUsers])
  idDiscount    Int?
  discountValue Decimal?  @db.Decimal(10,2)
    idDiaChi       Int?
  diaChiGiaoHang DiaChi?   @relation(fields: [idDiaChi], references: [idDiaChi])
  discount      DiscountCode? @relation(fields: [idDiscount], references: [idDiscount])
  chitietdonhang ChitietDonhang[]
  thanhtoan      Thanhtoan[]
      lichgiaohang    LichGiaoHang[]   // Quan hệ 1-n với bảng Image
  notifications Notification[] // Add this line

}
model DiaChi {
  idDiaChi      Int       @id @default(autoincrement())
  idUsers       Int
  diaChiChiTiet String    @db.VarChar(255)
  thanhPho      String    @db.VarChar(100)
  quanHuyen     String    @db.VarChar(100)
  phuongXa      String    @db.VarChar(100)
  soDienThoai   String    @db.VarChar(20)
  tenNguoiNhan  String    @db.VarChar(100)
  macDinh       Boolean   @default(false)
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  
  // Relationships
  user          Users     @relation(fields: [idUsers], references: [idUsers])
  donhang       Donhang[]
}
model DiscountCode {
  idDiscount    Int       @id @default(autoincrement())
  code          String    @unique
  description   String?   @db.Text
  discountType  String    // PERCENTAGE or FIXED_AMOUNT
  value         Decimal   @db.Decimal(10,2)
  minOrderValue Decimal?  @db.Decimal(10,2)
  maxDiscount   Decimal?  @db.Decimal(10,2)
  startDate     DateTime
  endDate       DateTime
  usageLimit    Int?      // Maximum number of times the code can be used
  usedCount     Int       @default(0)
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Add relation to track which orders used this discount
  orders        Donhang[]
}
model Loaisanpham {
  idloaisanpham Int       @id @default(autoincrement())
  tenloai       String?   @db.VarChar(255) @unique
  mota          String?   @db.VarChar(255)
  sanpham       Sanpham[]
}

 model Sanpham {
  idsanpham       Int              @id @default(autoincrement())
  tensanpham      String?          @db.VarChar(255)
  mota            String?         @db.Text
  gia             String?          @db.VarChar(255)
  hinhanh         String?          @db.VarChar(255)
  // trangthai       String?          @db.VarChar(255)
  idloaisanpham   Int?            
  giamgia         Decimal?         @db.Decimal(5,2)
  gioitinh        Boolean?
  totalViews    Int      @default(0)
  popularity   Float   @default(0)  // Thêm trường này
  releaseDate DateTime?
  trangthai   String?   @default("ACTIVE") // Can be "ACTIVE", "SCHEDULED", "DRAFT"
  size            String?          @db.VarChar(255)
  loaisanpham     Loaisanpham?     @relation(fields: [idloaisanpham], references: [idloaisanpham])
  chitietnhap     Chitietnhap[]
  chitietdonhang  ChitietDonhang[]
  giohang         Giohang[]
  danhgia         Danhgia[]
  kho             Kho[]
  images          Image[]  
  yeuthich        Yeuthich[] 
  lichgiaohang    LichGiaoHang[]
  ProductSizes    ProductSize[]     // New relationship
  ProductColors   ProductColor[]    // Thêm relation với bảng trung gian
   UserBehavior  UserBehavior[]

}
// model Sanpham {
//   idsanpham       Int              @id @default(autoincrement())
//   tensanpham      String?          @db.VarChar(255)
//   mota            String?          @db.VarChar(255)
//   gia             String?          @db.VarChar(255)
//   hinhanh         String?          @db.VarChar(255)
//   trangthai       String?          @db.VarChar(255)
//   idloaisanpham   Int?            
//   giamgia         Decimal?         @db.Decimal(5,2)
//   gioitinh        Boolean?
//   size            String?          @db.VarChar(255)
//   loaisanpham     Loaisanpham?     @relation(fields: [idloaisanpham], references: [idloaisanpham])
//   chitietnhap     Chitietnhap[]
//   chitietdonhang  ChitietDonhang[]
//   giohang         Giohang[]
//   danhgia         Danhgia[]
//   kho             Kho[]
//   images          Image[]  
//   yeuthich        Yeuthich[] 
//   lichgiaohang    LichGiaoHang[]
//   ProductSizes    ProductSize[]
// }

// Tạo model mới cho Màu sắc
model Color {
  idmausac        Int              @id @default(autoincrement())
  tenmau          String           @db.VarChar(255)
  mamau           String           @db.VarChar(50)    // Mã màu (ví dụ: #FF0000)
  ProductColors   ProductColor[]    // Relation với bảng trung gian
}

// Bảng trung gian để liên kết nhiều-nhiều giữa Sản phẩm và Màu sắc
model ProductColor {
  idsanpham       Int
  idmausac        Int
  hinhanh         String?          @db.VarChar(255)   // Hình ảnh cho variant màu này
  sanpham         Sanpham          @relation(fields: [idsanpham], references: [idsanpham])
  color           Color            @relation(fields: [idmausac], references: [idmausac])
  
  @@id([idsanpham, idmausac])     // Composite primary key
}
model Yeuthich {
  idYeuthich  Int      @id @default(autoincrement()) // Khóa chính
  idUsers     Int      // Liên kết đến bảng Users
  idSanpham   Int      // Liên kết đến bảng Sanpham
  createdAt   DateTime @default(now())              // Ngày thêm vào danh sách yêu thích
  users       Users    @relation(fields: [idUsers], references: [idUsers])
  sanpham     Sanpham  @relation(fields: [idSanpham], references: [idsanpham])
}

  model Image {
    idImage      Int       @id @default(autoincrement())
    url          String    @db.VarChar(255) // URL của hình ảnh
    altText      String?   @db.VarChar(255) // Mô tả alt cho SEO và accessibility
    createdAt    DateTime  @default(now())  // Ngày tạo
    updatedAt    DateTime  @updatedAt       // Ngày cập nhật gần nhất
    idSanpham    Int?                        
    sanpham      Sanpham?  @relation(fields: [idSanpham], references: [idsanpham]) // Quan hệ với bảng Sanpham
  }


  model Nhacungcap {
    idnhacungcap  Int       @id @default(autoincrement())
    tennhacungcap String?   @db.VarChar(255) @unique
    sodienthoai   String?   @db.VarChar(10)
    diachi        String?   @db.VarChar(45)
    email         String?   @db.VarChar(45)  @unique
    trangthai     Boolean?  @db.TinyInt
    nhaphang      Nhaphang[]
  }

model Nhaphang {
  idnhaphang   Int       @id @default(autoincrement())
  ngaynhap     String?   @db.VarChar(45)
  tongtien     String?   @db.VarChar(255)
  tongsoluong  Int?
  idnhacungcap Int?      
  nhacungcap   Nhacungcap? @relation(fields: [idnhacungcap], references: [idnhacungcap])
  chitietnhap  Chitietnhap[]
}

model Chitietnhap {
  idchitietnhap Int       @id @default(autoincrement())
  idnhaphang    Int?      
  idsanpham     Int?      
  soluong       String?   @db.VarChar(255)
  dongia        String?   @db.VarChar(255)
  nhaphang      Nhaphang? @relation(fields: [idnhaphang], references: [idnhaphang])
  sanpham       Sanpham?  @relation(fields: [idsanpham], references: [idsanpham])
}

model ChitietDonhang {
  idchitietdathang Int       @id @default(autoincrement())
  iddonhang        Int?      
  soluong          Int?
  dongia           Decimal?  @db.Decimal(15,2)
  idsanpham        Int?
  idSize           Int?      // New field for size
  donhang          Donhang?  @relation(fields: [iddonhang], references: [iddonhang])
  sanpham            Sanpham?  @relation(fields: [idsanpham], references: [idsanpham])
  size             Size?     @relation(fields: [idSize], references: [idSize])
}

model Giohang {
  idgiohang   Int       @id @default(autoincrement())
  soluong     Int?
  idKhachHang Int?      
  idsanpham   Int?      
  idSize      Int?      // New field for size
  khachhang   Users?    @relation(fields: [idKhachHang], references: [idUsers])
  sanpham     Sanpham?  @relation(fields: [idsanpham], references: [idsanpham])
  size        Size?     @relation(fields: [idSize], references: [idSize])
}

// model Nhanvien {
//   idNhanvien     Int       @id @default(autoincrement())
//   tennhanvien    String?   @db.VarChar(45)
//   sodienthoai    String?   @db.VarChar(45) @unique
//   email          String?   @db.VarChar(45)  @unique
//   gioitinh       Boolean?  @db.TinyInt
//   ngaysinh       DateTime?
//   diachi         String?   @db.VarChar(45)
//   ngayvaolam     DateTime? @db.Date
//   idrolenhanvien Int?
//   role           Role?     @relation(fields: [idrolenhanvien], references: [idrole])
//   calamviec      CaLamViec[]
//   luong          Luong[]
//   Admin          Admin[]
//   tuvanhotro     Tuvanhotro[]
// }

// model CaLamViec {
//   idCaLamViec Int       @id @default(autoincrement())
//   idUsers     Int?      
//   ngaylam     DateTime? @db.Date
//   giobatdau   String?   @db.VarChar(45)
//   gioketthuc  String?   @db.VarChar(45)
//   users       Users?    @relation(fields: [idUsers], references: [idUsers])
// }

model Luong {
  idLuong       Int       @id @default(autoincrement())
  idUsers       Int
  ngaytinhluong DateTime
  luongcoban    Decimal @db.Decimal(10,2)
  thuong        Decimal @db.Decimal(10,2) 
  soca          Int
  tongluong     Decimal

  @@unique([idUsers, ngaytinhluong])  // Composite unique constraint
    users         Users?      @relation(fields: [idUsers], references: [idUsers]) // Add relation

}
// model LichLamViec {
//   idLichLamViec   Int      @id @default(autoincrement())
//   idUsers         Int
//   NgayLamViec     DateTime
//   GioBatDau       DateTime
//   GioKetThuc      DateTime
//   DiaDiem          String?  @db.VarChar(225)

//   user            Users    @relation(fields: [idUsers], references: [idUsers])
// }

model LichLamViec {
  idLichLamViec   Int       @id @default(autoincrement())
  idUsers         Int
  NgayLamViec     DateTime
  GioBatDau       DateTime
  GioKetThuc      DateTime
  DiaDiem         String?   @db.VarChar(225)
  idCaLamViec     Int?      // Thêm dấu ? để trường này là tùy chọn

  user            Users     @relation(fields: [idUsers], references: [idUsers])
  caLamViec       CaLamViec? @relation(fields: [idCaLamViec], references: [idCaLamViec]) // Đảm bảo quan hệ là tùy chọn
}

model CaLamViec {
  idCaLamViec Int       @id @default(autoincrement())
  idUsers     Int?      
  ngaylam     DateTime? @db.Date
  giobatdau   String?   @db.VarChar(45)
  gioketthuc  String?   @db.VarChar(45)
  users       Users?    @relation(fields: [idUsers], references: [idUsers])
  
  lichLamViecs LichLamViec[] // Quan hệ ngược lại từ CaLamViec tới LichLamViec
}

// model Thanhtoan {
//   idthanhtoan          Int       @id @default(autoincrement())
//   iddonhang            Int?      @unique
//   phuongthucthanhtoan  String?   @db.VarChar(45)
//   sotien               Decimal?  @db.Decimal(10,2)
//   trangthai            String?   @db.VarChar(255)
//   ngaythanhtoan        DateTime? @db.Date
//   donhang              Donhang?  @relation(fields: [iddonhang], references: [iddonhang])
// }
// model Thanhtoan {
//   idthanhtoan             Int       @id @default(autoincrement())
//   iddonhang              Int?      @unique
//   phuongthucthanhtoan    String?   @db.VarChar(45)
//   sotien                 Decimal?  @db.Decimal(10,2)
//   trangthai              String?   @db.VarChar(255)
//   ngaythanhtoan          DateTime? @db.DateTime
  
//   // Payment proof image
//   hinhanhthanhtoan       String?   @db.Text
  
//   // Stripe payment fields (optional)
//   stripe_session_id      String?   @db.VarChar(255)
//   stripe_payment_intent_id String? @db.VarChar(255)
//   stripe_payment_status   String?   @db.VarChar(50)

//   // Relations
//   donhang               Donhang?   @relation(fields: [iddonhang], references: [iddonhang])
//   notifications         Notification[]

//   @@index([stripe_session_id])
//   @@index([stripe_payment_intent_id])
// }
// Thanhtoan model
model Thanhtoan {
  idthanhtoan             Int       @id @default(autoincrement())
  iddonhang              Int?      @unique
  phuongthucthanhtoan    String?   @db.VarChar(45)
  sotien                 Decimal?  @db.Decimal(10,2)
  trangthai              String?   @db.VarChar(255)
  ngaythanhtoan          DateTime? @db.DateTime
  
  // Payment proof image
  hinhanhthanhtoan       String?   @db.Text
  
  // Stripe payment fields (optional)
  stripe_session_id      String?   @db.VarChar(255)
  stripe_payment_intent_id String? @db.VarChar(255)
  stripe_payment_status   String?   @db.VarChar(50)
  
  // VNPay payment fields (optional)
  maGiaoDich             String?   @db.VarChar(255)
  vnp_TxnRef             String?   @db.VarChar(255)
  vnp_TransactionNo      String?   @db.VarChar(255)
  vnp_ResponseCode       String?   @db.VarChar(10)

  // Relations
  donhang               Donhang?   @relation(fields: [iddonhang], references: [iddonhang])
  notifications         Notification[]

  @@index([stripe_session_id])
  @@index([stripe_payment_intent_id])
  @@index([vnp_TxnRef])
  @@index([vnp_TransactionNo])
}

model LichGiaoHang {
  idLichGiaoXe Int       @id @default(autoincrement())
  idsanpham         Int?      
  idKhachHang  Int?      
  NgayGiao     DateTime? @db.Date
  GioGiao      DateTime? @db.Time(0)
  TrangThai    String?   @db.VarChar(225)
  idDatCoc     Int?      
  iddonhang    Int?      
  sanpham       Sanpham? @relation(fields: [idsanpham], references: [idsanpham])
  khachHang    Users?    @relation(fields: [idKhachHang], references: [idUsers])
  donHang      Donhang?  @relation(fields: [iddonhang], references: [iddonhang])
}

model Kho {
  idKho      Int       @id @default(autoincrement())
  idsanpham  Int?      @unique
  idSize     Int?
  soluong    Int?
  sanpham    Sanpham?  @relation(fields: [idsanpham], references: [idsanpham])
  size       Size?    @relation(fields: [idSize], references: [idSize])

  vung       Vung[]
}

model Vung {
  idVung   Int       @id @default(autoincrement())
  idkho    Int?      
  tenvung  String?   @db.VarChar(45)
  kho      Kho?      @relation(fields: [idkho], references: [idKho])
  ke       Ke[]
}

model Ke {
  idke    Int       @id @default(autoincrement())
  idvung  Int?      
  tenke   String?   @db.VarChar(45)
  vung    Vung?     @relation(fields: [idvung], references: [idVung])
  tang    Tang[]
}

model Tang {
  idtang   Int     @id @default(autoincrement())
  idke     Int?
  tentang  String? @db.VarChar(255)
  ke       Ke?     @relation(fields: [idke], references: [idke])
}

model Tuvanhotro {
  idtuvanhotro Int       @id @default(autoincrement())
  idkhachang   Int?     
  noidung      String?   @db.VarChar(255)
  hinhthuc     String?   @db.VarChar(45)
  trangthai    String?   @db.VarChar(45)
  idUsers      Int?      
  users        Users?    @relation(fields: [idUsers], references: [idUsers]) // Liên kết với bảng Users
}


// model Admin {
//   idadmin      Int       @id @default(autoincrement())
//   idnhanvien   Int?      @unique
//   idkhachhang  Int?      @unique
//   username     String?   @db.VarChar(45)
//   pasword      String?   @db.VarChar(45)
//   idroleAdmin  Int?
//   nhanvien     Nhanvien? @relation(fields: [idnhanvien], references: [idNhanvien])
//   khachhang    Khachhang? @relation(fields: [idkhachhang], references: [idkhachhang])
//   role         Role?     @relation(fields: [idroleAdmin], references: [idrole])
// }

model Permission {
  idPermission Int       @id
  TenQuyen     String?   @db.VarChar(45)  @unique
  RolePermission RolePermission[]
}

model RolePermission {
  idPermission Int
  IdRole       Int
  Id           Int       @id
  role         Role      @relation(fields: [IdRole], references: [idrole])
  permission   Permission @relation(fields: [idPermission], references: [idPermission])
}
model Size {
  idSize       Int      @id @default(autoincrement())
  tenSize      String   @db.VarChar(20)
  ProductSizes ProductSize[]
  ChitietDonhang ChitietDonhang[]
  Giohang       Giohang[]
  kho           Kho[]
}

// Add ProductSize model to create many-to-many relationship
model ProductSize {
  idsanpham    Int
  idSize       Int
  soluong      Int
  sanpham      Sanpham @relation(fields: [idsanpham], references: [idsanpham], onDelete: Cascade)
  size         Size    @relation(fields: [idSize], references: [idSize])

  @@id([idsanpham, idSize])
}
enum UserAction {
view
add_to_cart
purchase
}

model UserBehavior {
  id        Int        @id @default(autoincrement())
  idUsers   Int
  idsanpham Int
  action    UserAction
  timestamp DateTime   @default(now())
  score     Int        @default(0) // Thêm trường 'score' để lưu điểm cho sản phẩm
  user        Users     @relation(fields: [idUsers], references: [idUsers])
  product     Sanpham   @relation(fields: [idsanpham], references: [idsanpham])
}
